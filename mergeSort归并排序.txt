1.code
class ListNode {
      int val;
      ListNode next;
      ListNode(int x) { val = x; }
  }

public class Solution206 {
	
	public static void main(String[] args) {
		ListNode node1 = new ListNode(1);
		ListNode node2 = new ListNode(2);
		ListNode node3 = new ListNode(3);
		node1.next = node2;
		node2.next = node3;
		ListNode reversedListNode = reverseList(node1);
		while (reversedListNode != null) {
			System.out.println(reversedListNode.val);
			reversedListNode = reversedListNode.next;
		}
	}
	
    public static ListNode reverseList(ListNode head) {
    	
			//申请节点，pre和 cur，pre指向null
			ListNode pre = null;
			ListNode cur = head;
			ListNode tmp = null;

			while (cur != null) {
				tmp = cur.next;
				cur.next = pre;
				pre = cur;
				cur = tmp;
			}
			return pre;
    }
}

2.注意点
a.双指针迭代
我们可以申请两个指针，第一个指针叫 pre，最初是指向 null 的。
第二个指针 cur 指向 head，然后不断遍历 cur。
每次迭代到 cur，都将 cur 的 next 指向 pre，然后 pre 和 cur 前进一位。
都迭代完了(cur 变成 null 了)，pre 就是最后一个节点了。
注意最后返回的是pre而不是curr。因为curr现在是空。
b.while里面是curr！= null。
c.head 不要带入循环中。